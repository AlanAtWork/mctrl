
                              ============
                                 README
                              ============


[1] What is mCtrl
=================

mCtrl is a library providing set of user interface controls for Win32API.
Interface of the library is very similar to other controls of Win32API, 
including the standard and common controls (buttons, edit boxes, combo boxes 
etc.). 

mCtrl is covered with the GNU Lesser General Public License 2.1 or
(at your option) any later version. See file COPYING.lib for more info.


[2] Getting mCtrl
=================

You can always get latest version, and most actual information on project 
webpages:
    - http://mctrl.sourceforge.net
    - http://sourceforge.net/projects/mctrl

There are usually four packages for each release version available:
    - mCtrl-x.y.z-doc.zip     ... documentation (HTML)
    - mCtrl-x.y.z-src.zip     ... sources
    - mCtrl-x.y.z-x86.zip     ... prebuilt 32-bit binaries
    - mCtrl-x.y.z-x86_64.zip  ... prebuilt 64-bit binaries


[3] Using mCtrl
===============

If you have a pre-built package (either 32-bit or 64-bit), using mCtrl is as
easy as using any other DLL.

Header files are located in 'include\mCtrl' directory. You should instruct
your C/C++ compiler to search for header files in the 'include' directory and
use the 'mCtrl' in your preprocessor #include directives, e.g.: 
    #include <mCtrl/version.h>

Import libraries are under the 'lib' subdirectory:
    - libmCtrl.a for gcc-based toolchains (e.g. mingw, mingw-w64)
    - mCtrl.lib for MSVC

And finally deploy your application with the MCTRL.DLL which is located
in the 'bin' subdirectory.

Note that documentation is not bundled within the prebuilt packages. 
You jave to download a separate package, or you can find the documentation
online:
    http://mctrl.sourceforge.net/doc.php


[4] Compiling mCtrl from sources
================================

Disclaimer: If you want to just use MCTRL.DLL you should probably stick with
prebuilt package.

Primary development platform for mCtrl project is mingw-w64
(see http://sourceforge.net/projects/mingw-w64/) and MSYS. Assuming you have
setup the environment, and have the mCtrl sources then the build is as easy
as running 'make' from the root directory:
    $ make
    
It is possible to use PREFIX if the gcc toolchain was compiled as a
cross-compiler. For example:
    $ make PREFIX=i686-w64-mingw32-

More details and information about buiding within other environment (e.g.
MS VisualStudio) can be found in documentation.


[5] Bugs
========

If you encounter any bug, please be so kind and report it. We cannot fix bugs
we do not know about. The bug tracker can be found here:
    http://sourceforge.net/tracker/?group_id=286433&atid=1213775

Please be so kind and try to verify the bug you want to report is not already
registered. If it is, check it (and potantially add new details about it).

